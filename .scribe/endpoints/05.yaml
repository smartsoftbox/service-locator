name: Promotions
description: |-

  API for managing promotions.
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/services/{service_id}/promotions'
    metadata:
      groupName: Promotions
      groupDescription: |-

        API for managing promotions.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a list of Promotions'
      description: 'Retrieve a paginated list of promotions. Optionally, include related services by using the `include=services` parameter.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      service_id:
        name: service_id
        description: 'The ID of the service.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      service_id: 1
    queryParameters:
      include:
        name: include
        description: 'Include related resources, e.g., `services`.'
        required: false
        example: '?include=services'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      include: '?include=services'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "service_id": 10,
                "description": "Discount on spa services",
                "valid_until": "2024-12-31",
                "created_at": "2024-09-15T12:45:32.000000Z",
                "updated_at": "2024-09-15T12:45:32.000000Z",
                "service": {
                  "id": 10,
                  "name": "Spa Service",
                  "category_id": 3,
                  "address": "123 Wellness Street",
                  "latitude": 34.052235,
                  "longitude": -118.243683
                }
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/services/{service_id}/promotions'
    metadata:
      groupName: Promotions
      groupDescription: |-

        API for managing promotions.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new Promotion'
      description: 'Store a new promotion in the system. You must provide a service ID, description, and optionally the expiration date.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      service_id:
        name: service_id
        description: 'The ID of the service.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      service_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      service_id:
        name: service_id
        description: 'The ID of the related service.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: 'The promotion description.'
        required: true
        example: 'Discount on spa services'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      valid_until:
        name: valid_until
        description: 'Optional. The expiration date of the promotion in YYYY-MM-DD format.'
        required: false
        example: '2024-12-31'
        type: date
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      service_id: 10
      description: 'Discount on spa services'
      valid_until: '2024-12-31'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "service_id": 10,
            "description": "Discount on spa services",
            "valid_until": "2024-12-31",
            "created_at": "2024-09-15T12:45:32.000000Z",
            "updated_at": "2024-09-15T12:45:32.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/services/{service_id}/promotions/{id}'
    metadata:
      groupName: Promotions
      groupDescription: |-

        API for managing promotions.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific Promotion'
      description: 'Retrieve details of a specific promotion by its ID. Optionally, include the related service by using the `include=services` parameter.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      service_id:
        name: service_id
        description: 'The ID of the service.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the promotion.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      service_id: 1
      id: 1
    queryParameters:
      include:
        name: include
        description: 'Include related resources, e.g., `services`.'
        required: false
        example: '?include=services'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      include: '?include=services'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "service_id": 10,
            "description": "Discount on spa services",
            "valid_until": "2024-12-31",
            "created_at": "2024-09-15T12:45:32.000000Z",
            "updated_at": "2024-09-15T12:45:32.000000Z",
            "service": {
              "id": 10,
              "name": "Spa Service",
              "category_id": 3,
              "address": "123 Wellness Street",
              "latitude": 34.052235,
              "longitude": -118.243683
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/services/{service_id}/promotions/{id}'
    metadata:
      groupName: Promotions
      groupDescription: |-

        API for managing promotions.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a Promotion'
      description: 'Update the details of an existing promotion by its ID. You can update the service ID, description, and expiration date.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      service_id:
        name: service_id
        description: 'The ID of the service.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the promotion.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      service_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      service_id:
        name: service_id
        description: 'Optional. The ID of the related service.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: 'Optional. The promotion description.'
        required: false
        example: 'Updated discount on spa services'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      valid_until:
        name: valid_until
        description: 'Optional. The expiration date of the promotion in YYYY-MM-DD format.'
        required: false
        example: '2024-12-31'
        type: date
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      service_id: 10
      description: 'Updated discount on spa services'
      valid_until: '2024-12-31'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "service_id": 10,
            "description": "Updated discount on spa services",
            "valid_until": "2024-12-31",
            "created_at": "2024-09-15T12:45:32.000000Z",
            "updated_at": "2024-09-15T13:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/services/{service_id}/promotions/{id}'
    metadata:
      groupName: Promotions
      groupDescription: |-

        API for managing promotions.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a Promotion'
      description: 'Delete a specific promotion by its ID. This action is irreversible.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      service_id:
        name: service_id
        description: 'The ID of the service.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the promotion.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      service_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: |-
          {
            "message": "Promotion deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
