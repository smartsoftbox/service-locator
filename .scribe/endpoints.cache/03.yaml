## Autogenerated by Scribe. DO NOT MODIFY.

name: Services
description: |-

  API for managing services.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/services
    metadata:
      groupName: Services
      groupDescription: |-

        API for managing services.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a list of Services'
      description: 'Retrieve a paginated list of services. Optionally, include related categories, reviews, or review authors (users) by using the `include` parameter.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      include:
        name: include
        description: 'Include related resources. Possible values: `category`, `reviews`, `reviews.user`.'
        required: false
        example: '?include=category,reviews,reviews.user'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      include: '?include=category,reviews,reviews.user'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Spa Service",
                "category_id": 3,
                "address": "123 Wellness Street",
                "latitude": 34.052235,
                "longitude": -118.243683,
                "rating": 4.5,
                "review_count": 10,
                "opening_hours": {
                  "Monday": "08:00-20:00",
                  "Tuesday": "08:00-20:00"
                },
                "created_at": "2024-09-15T12:45:32.000000Z",
                "updated_at": "2024-09-15T12:45:32.000000Z",
                "category": {
                  "id": 3,
                  "name": "Wellness"
                },
                "reviews": [
                  {
                    "id": 1,
                    "rating": 5,
                    "comment": "Excellent service!",
                    "user": {
                      "id": 5,
                      "name": "John Doe"
                    }
                  }
                ]
              }
            ],
            "links": {
              "first": "http://example.com/api/services?page=1",
              "last": "http://example.com/api/services?page=3",
              "prev": null,
              "next": "http://example.com/api/services?page=2"
            },
            "meta": {
              "current_page": 1,
              "from": 1,
              "last_page": 3,
              "path": "http://example.com/api/services",
              "per_page": 15,
              "to": 15,
              "total": 45
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/services
    metadata:
      groupName: Services
      groupDescription: |-

        API for managing services.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new Service'
      description: 'Store a new service. You must provide a name, category ID, address, latitude, longitude, and optionally other details.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the service.'
        required: true
        example: 'Spa Service'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      category_id:
        name: category_id
        description: 'The ID of the category this service belongs to.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      address:
        name: address
        description: 'The address of the service.'
        required: true
        example: '123 Wellness Street'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      latitude:
        name: latitude
        description: 'The latitude coordinate.'
        required: true
        example: '34.052235'
        type: decimal
        enumValues: []
        exampleWasSpecified: true
        custom: []
      longitude:
        name: longitude
        description: 'The longitude coordinate.'
        required: true
        example: '-118.243683'
        type: decimal
        enumValues: []
        exampleWasSpecified: true
        custom: []
      rating:
        name: rating
        description: 'optional The rating of the service, between 0 and 5.'
        required: false
        example: '4.5'
        type: decimal
        enumValues: []
        exampleWasSpecified: true
        custom: []
      review_count:
        name: review_count
        description: 'optional The number of reviews.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      opening_hours:
        name: opening_hours
        description: 'optional The opening hours of the service.'
        required: false
        example: '{"Monday": "08:00-20:00", "Tuesday": "08:00-20:00"}'
        type: json
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: 'Spa Service'
      category_id: 3
      address: '123 Wellness Street'
      latitude: '34.052235'
      longitude: '-118.243683'
      rating: '4.5'
      review_count: 10
      opening_hours: '{"Monday": "08:00-20:00", "Tuesday": "08:00-20:00"}'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "name": "Spa Service",
            "category_id": 3,
            "address": "123 Wellness Street",
            "latitude": 34.052235,
            "longitude": -118.243683,
            "rating": 4.5,
            "review_count": 10,
            "opening_hours": {
              "Monday": "08:00-20:00",
              "Tuesday": "08:00-20:00"
            },
            "created_at": "2024-09-15T12:45:32.000000Z",
            "updated_at": "2024-09-15T12:45:32.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/services/{id}'
    metadata:
      groupName: Services
      groupDescription: |-

        API for managing services.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific Service'
      description: 'Retrieve details of a specific service by its ID. Optionally, include related category, reviews, or review authors by using the `include` parameter.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the service.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      include:
        name: include
        description: 'Include related resources. Possible values: `category`, `reviews`, `reviews.user`.'
        required: false
        example: '?include=category,reviews,reviews.user'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      include: '?include=category,reviews,reviews.user'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Spa Service",
            "category_id": 3,
            "address": "123 Wellness Street",
            "latitude": 34.052235,
            "longitude": -118.243683,
            "rating": 4.5,
            "review_count": 10,
            "opening_hours": {
              "Monday": "08:00-20:00",
              "Tuesday": "08:00-20:00"
            },
            "created_at": "2024-09-15T12:45:32.000000Z",
            "updated_at": "2024-09-15T12:45:32.000000Z",
            "category": {
              "id": 3,
              "name": "Wellness"
            },
            "reviews": [
              {
                "id": 1,
                "rating": 5,
                "comment": "Excellent service!",
                "user": {
                  "id": 5,
                  "name": "John Doe"
                }
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/services/{id}'
    metadata:
      groupName: Services
      groupDescription: |-

        API for managing services.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a Service'
      description: 'Update the details of an existing service by its ID. You can update the name, address, or other service details.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the service.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'optional The name of the service.'
        required: false
        example: 'Updated Spa Service'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      category_id:
        name: category_id
        description: 'optional The ID of the category this service belongs to.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      address:
        name: address
        description: 'optional The address of the service.'
        required: false
        example: '456 Wellness Avenue'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      latitude:
        name: latitude
        description: 'optional The latitude coordinate.'
        required: false
        example: '34.052235'
        type: decimal
        enumValues: []
        exampleWasSpecified: true
        custom: []
      longitude:
        name: longitude
        description: 'optional The longitude coordinate.'
        required: false
        example: '-118.243683'
        type: decimal
        enumValues: []
        exampleWasSpecified: true
        custom: []
      rating:
        name: rating
        description: 'optional The rating of the service, between 0 and 5.'
        required: false
        example: '4.7'
        type: decimal
        enumValues: []
        exampleWasSpecified: true
        custom: []
      review_count:
        name: review_count
        description: 'optional The number of reviews.'
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      opening_hours:
        name: opening_hours
        description: 'optional The opening hours of the service.'
        required: false
        example: '{"Monday": "09:00-21:00", "Tuesday": "09:00-21:00"}'
        type: json
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: 'Updated Spa Service'
      category_id: 4
      address: '456 Wellness Avenue'
      latitude: '34.052235'
      longitude: '-118.243683'
      rating: '4.7'
      review_count: 12
      opening_hours: '{"Monday": "09:00-21:00", "Tuesday": "09:00-21:00"}'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Updated Spa Service",
            "category_id": 4,
            "address": "456 Wellness Avenue",
            "latitude": 34.052235,
            "longitude": -118.243683,
            "rating": 4.7,
            "review_count": 12,
            "opening_hours": {
              "Monday": "09:00-21:00",
              "Tuesday": "09:00-21:00"
            },
            "created_at": "2024-09-15T12:45:32.000000Z",
            "updated_at": "2024-09-16T12:45:32.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Service not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/services/{id}'
    metadata:
      groupName: Services
      groupDescription: |-

        API for managing services.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a Service'
      description: 'Delete a specific service by its ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the service.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
